<!-- -*- eval:(visual-line-mode 1) -*- -->

<div data-theme-toc="true"></div>
<div data-guild-docs="true"></div>

## Overview

Guild supports training on remote system by way of a *remote* facility.

- Define a remote in [user configuration](ref:user-config)
- Specify the remote name using the `--remote` option when running an operation

For a complete reference on remote configuration, see [*Remotes Reference*](/reference/remotes).

## Define a Remote

Remotes are defined in [user configuration](ref:user-config). Below is an example of an SSH remote named `remote-gpu`:

``` yaml
remotes:
  remote-gpu:
    type: ssh
    host: gpu001.mydomain.com
    user: ubuntu
    private-key: ~/.ssh/gpu001.pem
```

Guild supports the following remote types:

<div data-guild-class="terns">

|||
|-|-|
| [ssh](/reference/remotes#ssh) | Connect to a remote server over [SSH](term:ssh). Use this type to train on remote servers on-premises or on any cloud vendor. Guild does not support support starting of `ssh` remote types. |
| [ec2](/reference/remotes#ec2) | Connect to a remote EC2 host over [SSH](term:ssh). This remote type supports [`start`](/commands/remote-start) and [`stop`](/commands/remote-stop) remote commands given EC2 specific configuration for the remote. |
| [s3](/reference/remotes#s3) | Copy runs to and from S3. This remote type does not support runs but can be used for backup and  restore. |
</div>

For a complete list of remote types, including examples, see [Remotes](ref:remote).

## Manage Remotes

Remotes can be listed, checked for status, and, if supported by the remote type, started and stopped.

Remote management commands:

|                                                  |                                                      |
|--------------------------------------------------|------------------------------------------------------|
| [`guild remotes`](/commands/remotes)             | List available remotes.                              |
| [`guild remote status`](/commands/remote-status) | Show status for a remote.                            |
| [`guild remote start`](/commands/remote-start)   | Start a remote. Not all remote types can be started. |
| [`guild remote stop`](/commands/remote-start)    | Stop a remote. Not all remote types can be stopped.  |

A remote must be available before it can be used in a remote command. Check a remote using [`guild remote status`](/commands/remote-status). If a remote is not available and can be started, use [`guild remote start`](/commands/remote-start) to start it first. Note that some remote types cannot be started or stopped. Refer to [Remotes](ref:remote) for detail on each remote type.

## Remote Commands

To run apply a command to a remote, use the `--remote` option. For example, to run [`guild check`](/commands/check) on a remote named `remote-gpu` (see example above), run:

``` command
guild --remote remote-gpu check
```

Not all remote types support every command. For example, the `s3` remote type does not support the `run` command. Refer to [Remotes](ref:remote) for details on which remote commands are support for a particular remote type.

Guild commands that support remotes:

|||
|-|-|
| [`check`](/commands/check) | *Check Guild on the remote* |
| [`run`](/commands/run) | *Run an operation on a remote* |
| [`stop`](/commands/runs-stop) | *Stop runs in progress on a remote* |
| [`watch`](/commands/watch) | *Connect to a remote run in progress and watch its output* |
| [`runs`](/commands/runs-list)| *List runs on a remote* |
| [`runs info`](/commands/runs-info) | *Show information about a remote run* |
| [`ls`](/commands/ls) | *List remote run files* |
| [`diff`](/commands/diff) | *Diff remote runs* |
| [`cat`](/commands/cat) | *Show remote run file or output* |
| [`label`](/commands/label) | *Apply a label to one or more remote runs* |
| [`runs delete`](/commands/runs-delete) | *Delete remote runs* |
| [`runs restore`](/commands/runs-restore) | *Restore deleted remote runs on a remote* |
| [`runs purge`](/commands/runs-purge) | *Purge deleted remote runs on a remote* |
| [`pull`](/commands/pull) | *Copy remote runs to the local environment* |
| [`push`](/commands/push) | *Copy local runs to the remote* |
